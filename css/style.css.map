{"version":3,"sources":["_base.scss","susy/susy/language/susy/_gutters.scss","_layout.scss","_results.scss","susy/susy/output/support/_rem.scss","_result.scss","susy/susy/language/susy/_margins.scss"],"names":[],"mappings":"AAgBA,aACE,WACA,cACA,UAAW,CACZ,mBAGA,kBAAmB,CACnB,UAGA,SACA,UACA,cACA,eACA,kBACA,mBACA,+BACA,UAhCU,CAiCV,KAGA,qBAAsB,CACtB,KAGA,iBAAiB,CACjB,WAGC,WACA,kBCyDwB,CDxDzB,eE9CC,mBACA,WACA,YACA,cACA,iCACA,uBACA,aAAa,CARf,iBAWG,SACA,UACA,iBACA,aAAwB,CACxB,QAKF,cACA,UACA,YACA,iBACA,iBACA,gBACA,yBACA,kBACA,iBAAkB,CATnB,cAYE,cACA,WACA,YACA,YACA,aACA,WACA,gBACA,eACA,8BAA+B,CApBjC,yCAuBG,6BACA,kBACA,gBACA,eACA,yBAAyB,CA3B5B,oCAuBG,6BACA,kBACA,gBACA,eACA,yBAAyB,CA3B5B,2BAuBG,6BACA,kBACA,gBACA,eACA,yBAAyB,CA3B5B,gCA+BG,SAAU,CA/Bb,eAoCE,kBACA,QACA,YACA,mCAAA,AACA,2BAAA,gBACA,6BACA,kBACA,aACA,WACA,eACA,0BACA,0BACA,cAAe,CAhDjB,qBAoDG,uCACA,kBFrEgB,CEgBnB,sDA0DG,gBACA,6BACA,eACA,WAAY,CACZ,eAKF,cACA,iBACA,WACA,gBACA,iBACA,yBACA,iBAAkB,CAPnB,sBAUE,WACA,cACA,gCACA,eACA,kBACA,qCAA+B,CAfjC,wBAkBG,0BACA,gBACA,eACA,cACA,UACA,SACA,oBAAqB,CAxBxB,0BA4BG,mBACA,WACA,qBACA,iBACA,kBACA,eACA,QACA,mCAAA,AACA,2BAAA,WACA,wBACA,+BAAyC,CAtC5C,gCAyCI,kBAA4B,CAzChC,mCA8CG,YACA,qBACA,kBACA,QACA,mCAAA,AACA,2BAAA,YACA,uCACA,kBACA,gBACA,qBACA,uBAAuB,CAxD1B,wCA2DI,yBF9IO,CEmFX,oDA8DK,QACA,iBAAkB,CA/DvB,mDAmEK,QACA,iBAAkB,CApEvB,yCAyEI,sCF1JU,CEiFd,8CA4EK,wBF/JM,CEmFX,2BAmFE,cACA,kBACA,6BACA,eAAe,CAtFjB,8BAyFG,aACD,CA1FF,8BA6FG,oBAAqB,CA7FxB,6BAiGG,kCACA,qBACA,iBACA,aACA,kBACA,gBACA,cACA,yBAA0B,CAxG7B,mCA2GI,kBF5LU,CEiFd,oCA+GI,mBACA,UAAU,CAhHd,0CAmHK,kBAA4B,CAnHjC,sCAwHI,WACA,eACA,wBF7MO,CEmFX,4CA6HK,kBF9MS,CE+MT,SClNH,cACA,WACA,WAAW,CAHb,mBAMI,WACA,cACA,UAAW,CARf,wBAYI,aAAc,CAZlB,4BAeM,UAAW,CAfjB,2CAkBQ,2CHdM,CGJd,sCAyBM,mBACA,cACA,WACA,gBACA,gBACA,iBACA,gCACA,gBACA,YACA,iBAAkB,CAlCxB,wCAqCQ,SACA,0BACA,eACA,gBACA,qBACA,iBAAkB,CA1C1B,+CA6CU,UH3CC,CGFX,6CAiDU,gBACA,kBACA,qBACA,QACA,YACA,mCAAA,AACA,2BAAA,YAAa,CAvDvB,oDA4DY,oBAAqB,CA5DjC,wDAiEc,iDAAA,AAAwC,wCAAA,CAjEtD,6BAyEM,eACA,eAAgB,CA1EtB,+BA6EQ,WACA,qBACA,qBACA,UAAW,CAhFnB,8DAoFQ,kBACA,SAAS,CArFjB,oCCmBI,eAAA,WAAA,oBAAA,qBDuEI,eAAe,CA1FvB,wCA6FU,mBACA,oCACA,4BACA,uBAAuB,CAhGjC,kCCmBI,gBAAA,WAAA,oBAAA,oBHqFsB,CExG1B,iCCmBI,eAAA,WAAA,oBAAA,oBHqFsB,CExG1B,mCCmBI,gBAAA,WAAA,oBAAA,oBHqFsB,CExG1B,mCCmBI,gBAAA,WAAA,oBAAA,oBHqFsB,CExG1B,qCCmBI,gBAAA,YAAA,oBAAA,oBHqFsB,CExG1B,gCA2HQ,oBAAA,AACA,oBADA,AACA,aAAA,WACA,YACA,kBACA,kBACA,0BAAA,AACA,uBADA,AACA,oBAAA,0BACA,qBACA,wBACA,6BACA,eAAgB,CArIxB,qCAwIU,2BAAA,AACA,0BADA,AACA,kBAAA,uBAAuB,CAzIjC,sCA6IU,eAAgB,CA7I1B,sCAiJU,sCACA,aACA,kBAAkB,CAnJ5B,kDAsJY,qCAAgC,CAtJ5C,4CA0JY,aHzJE,CGDd,+CAgKQ,kBAAiC,CAhKzC,qDAmKU,kBAAmC,CACpC,2CAQP,qCACE,cAAe,CAChB,6BAGC,cAAe,CAChB,CEjLH,QACE,kBJsGwB,CIvG1B,oBDkBI,gBAAA,WAAA,oBAAA,qBAAA,qBCZA,kBAAkB,CANtB,wBASM,eACA,cACA,oBACA,0CACA,wBLXa,CKFnB,cDkBI,gBAAA,WAAA,oBAAA,qBCCA,iBAAiB,CAnBrB,iBAsBM,gBACA,gBACA,cACA,iBAAkB,CAzBxB,oBA4BQ,eACA,kBACA,yBL7BG,CKDX,iBAmCM,cACA,gBACA,+BLlCQ,CKHd,sBDkBI,UAAA,WCwBE,kBAAkB,CA1CxB,wBA6CQ,iBAAiB,CA7CzB,6BAiDQ,SACA,UACA,yBACA,eAAgB,CApDxB,gCAuDU,kBACA,cAAe,CAxDzB,gBA8DM,cACA,qBACA,gBACA,iBAAkB,CAjExB,sBAoEQ,WACA,kBACA,YACA,OACA,WACA,WACA,gCACA,UACA,uBAAuB,CA5E/B,sBAgFQ,aAAuB,CAhF/B,4BAmFU,UACA,YACA,UAAW,CACZ,2CAQP,oBD5EE,gBAAA,WAAA,oBAAA,qBAAA,oBEH8C,CDkF/C,cD/EC,gBAAA,WAAA,oBAAA,oBHqFsB,CIFvB,CAIH,2CACE,iBACE,eAAgB,CACjB,sBAGC,WACA,cACA,kBAAkB,CACnB,CAAA","file":"style.css","sourcesContent":["// variables\n$blue: #5781cf;\n$text: #555;\n$lightgray: #fafafa;\n$gray: #cfcfcf;\n\n$susy: (\n  columns: 18,\n\tglobal-box-sizing: border-box,\n\tmath: fluid,\n  output: float,\n\tgutter-position: split\n);\n\n\n// global/base styles\n.group:after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n\n*, *:after, *:before {\n\tbox-sizing: inherit;\n}\n\nbody, html {\n\tmargin:0;\n\tpadding: 0;\n\tdisplay: block;\n\tfont-size:100%;\n\tline-height: 1.4em;\n\tbackground:$lightgray;\n\tfont-family: 'Lato', sans-serif;\n\tcolor:$text;\n}\n\nhtml {\n\tbox-sizing: border-box;\n}\n\nbody {\n\toverflow-x:hidden;\n}\n\n.container {\n  width: 100%;\n  padding:0 gutter(6);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","#topBar {\n\theader {\n\t\tbackground:darken($blue, 3%);\n\t\twidth: 100%;\n\t\theight: 50px;\n\t\tdisplay: block;\n\t\tborder-bottom:70px solid $blue;\n\t\tbox-sizing: content-box;\n\t\tpadding:0 2vw;\n\n\t\tp {\n\t\t\tmargin:0;\n\t\t\tpadding:0;\n\t\t\tline-height: 50px;\n\t\t\tcolor:darken($blue, 20%);\n\t\t}\n\t} // header\n} // #topBar\n\n#search {\n\tdisplay: block;\n\twidth: 96%;\n\theight: auto;\n\tmargin:30px auto;\n\tpadding:gutter(10) gutter(8);\n\tbackground:#fff;\n\tborder:1px solid $gray;\n\tborder-radius: 4px;\n\tposition: relative;\n\n\tinput {\n\t\tdisplay: block;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tborder: none;\n\t\toutline: none;\n\t\tcolor:$text;\n\t\tfont-weight: 400;\n\t\tfont-size: .9em;\n\t\tfont-family: \"Lato\", sans-serif;\n\n\t\t&::placeholder {\n\t\t\tcolor:rgba($gray, .75);\n\t\t\tfont-style: italic;\n\t\t\tfont-weight: 300;\n\t\t\tfont-size: .9em;\n\t\t\ttransition:.2s all linear;\n\t\t}\n\n\t\t&::-moz-placeholder {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\n\tbutton {\n\t\tposition: absolute;\n\t\ttop:50%;\n\t\tright:gutter(8);\n\t\ttransform:translateY(-50%);\n\t\tbackground:none;\n\t\tborder: 1px solid transparent;\n\t\tborder-radius: 3px;\n\t\toutline: none;\n\t\tcolor:$text;\n\t\tfont-size: .9em;\n\t\tpadding:.6% .75% .4% .75%;\n\t\ttransition:.2s all linear;\n\t\tcursor: pointer;\n\n\n\t\t&:hover {\n\t\t\tborder:1px solid rgba($gray, .5);\n\t\t\tbackground:$lightgray;\n\t\t}\n\n\t\t&:disabled,\n\t\t&:disabled:hover {\n\t\t\tbackground:none;\n\t\t\tborder: 1px solid transparent;\n\t\t\tcursor: default;\n\t\t\topacity: .75;\n\t\t}\n\t} // button\n} // #search\n\n#listContainer {\n\tdisplay: block;\n\tmin-height: 100px;\n\twidth: 96vw;\n\tbackground:#fff;\n\tmargin:30px auto;\n\tborder:1px solid $gray;\n\tborder-radius: 4px;\n\n\theader {\n\t\twidth:100%;\n\t\tdisplay: block;\n\t\tborder-bottom:1px solid $gray;\n\t\tpadding:15px 0;\n\t\tposition: relative;\n\t\tbox-shadow: 0 1px 3px rgba(#000, .15);\n\n\t\tp {\n\t\t\tcolor:rgba($text, .75);\n\t\t\tfont-weight: 400;\n\t\t\tfont-size: .9em;\n\t\t\tdisplay: block;\n\t\t\tpadding:0;\n\t\t\tmargin:0;\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\tp a {\n\t\t\tbackground:$blue;\n\t\t\tcolor:#fff;\n\t\t\ttext-decoration: none;\n\t\t\tpadding:6px 10px;\n\t\t\tborder-radius: 3px;\n\t\t\tfont-size: .9em;\n\t\t\ttop:50%;\n\t\t\ttransform:translateY(-50%);\n\t\t\tleft:gutter(8);\n\t\t\ttransition:.2s all ease;\n\t\t\tborder-bottom:2px solid darken($blue, 3%);\n\n\t\t\t&:hover {\n\t\t\t\tbackground:darken($blue, 3%);\n\t\t\t}\n\t\t}\n\n\t\t.ui-dropdown {\n\t\t\tfloat: right;\n\t\t\tdisplay: inline-block;\n\t\t\tposition: absolute;\n\t\t\ttop:50%;\n\t\t\ttransform:translateY(-50%);\n\t\t\tright:gutter(8);\n\t\t\tborder:1px solid rgba($gray, .3);\n\t\t\tborder-radius: 2px;\n\t\t\tpadding:5px 7px;\n\t\t\ttext-decoration: none;\n\t\t\ttransition:.2s all ease;\n\n\t\t\tspan {\n\t\t\t\tcolor:rgba($text, .75);\n\n\t\t\t\t&:first-child {\n\t\t\t\t\ttop:2px;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\n\t\t\t\t&:last-child {\n\t\t\t\t\ttop:3px;\n\t\t\t\t\tposition: relative;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&:hover {\n\t\t\t\tborder:1px solid rgba($gray, .5);\n\n\t\t\t\tspan {\n\t\t\t\t\tcolor:rgba($text, .9);\n\t\t\t\t}\n\t\t\t}\n\t\t} // .ui-dropdown\n\t} // header\n\n\t.pagination {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\tborder-top:1px solid $gray;\n\t\tpadding:3px 2vw;\n\n\t\tul {\n\t\t\tdisplay: block\n\t\t}\n\n\t\tli {\n\t\t\tdisplay: inline-block;\n\t\t}\n\n\t\ta {\n\t\t\tbackground:rgba($gray, .75);\n\t\t\ttext-decoration: none;\n\t\t\tpadding:8px 12px;\n\t\t\tmargin:0 2px;\n\t\t\tborder-radius: 2px;\n\t\t\tfont-size: .75em;\n\t\t\tcolor:darken($text, 2%);\n\t\t\ttransition: all linear .2s;\n\n\t\t\t&:hover {\n\t\t\t\tbackground:$gray;\n\t\t\t}\n\n\t\t\t&.active {\n\t\t\t\tbackground:$blue;\n\t\t\t\tcolor:#fff;\n\n\t\t\t\t&:hover {\n\t\t\t\t\tbackground:darken($blue, 5%);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.disabled {\n\t\t\t\topacity: .5;\n\t\t\t\tcursor: default;\n\t\t\t\tcolor:rgba($text, .9);\n\n\t\t\t\t&:hover {\n\t\t\t\t\tbackground:$gray;\n\t\t\t\t}\n\t\t\t}\n\t\t} // a\n\t}\n} // #listContainer\n","#results {\n  display: block;\n  width: 100%;\n  height:auto;\n\n  div:after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n\n  .results--list {\n    display: block;\n\n    div {\n      width: 100%;\n\n      &:nth-child(odd) {\n        border-top:1px solid rgba($gray, .75);\n      }\n    } // div\n\n    div.filterBar {\n      $filterHeight: 40px;\n\n      background:darken($lightgray, 3.5%);\n      display: block;\n      width: 100%;\n      min-height: $filterHeight;\n      padding:0 gutter(8);\n      line-height: $filterHeight;\n      border-bottom:1px solid $gray;\n      border-top:none;\n      z-index: 100;\n      position: relative;\n\n      a {\n        margin:0;\n        color:rgba($text, .65);\n        font-size: .9em;\n        font-weight: 400;\n        display: inline-block;\n        position: relative;\n\n        &.sorted {\n          color:$text;\n        }\n\n        span {\n          font-size: 1.3em;\n          position: absolute;\n          display: inline-block;\n          top:55%;\n          left:102.5%;\n          transform:translateY(-50%);\n          display: none;\n        }\n\n        &.sorted {\n          span {\n            display: inline-block;\n          }\n\n          &.asc {\n            span {\n              transform:rotate(180deg) translateY(57%);\n            }\n          }\n        } // .sorted\n      }\n    } // .filterBar\n\n    span {\n      min-height: 1px;\n      font-size: .85em;\n\n      a {\n        color:$text;\n        text-decoration: none;\n        display: inline-block;\n        float: left;\n      }\n\n      a, p {\n        margin:18px 0 0 0;\n        padding:0;\n      }\n\n      &.avatar {\n        @include span(1);\n        padding-top:5px;\n\n        img {\n          border-radius: 50px;\n          box-shadow: 0 0 1px rgba(#000, .25);\n          max-width: calc(100% - 10px);\n          transition:.2s all ease;\n        }\n      } // avatar\n\n      &.name {\n        @include span(3);\n      }\n\n      &.age {\n        @include span(1);\n      }\n\n      &.phone {\n        @include span(3);\n      }\n\n      &.email {\n        @include span(4);\n      }\n\n      &.address {\n        @include span(6 last);\n      }\n    } // span\n\n    .user {\n      &>a {\n        display: flex;\n        width: 100%;\n        height: 100%;\n        padding:5px gutter(8);\n        position: relative;\n        align-items: stretch;\n        color:rgba($text, .75);\n        text-decoration: none;\n        transition:.2s all ease;\n        box-shadow: 0 0 0 rgba(#000, 0);\n        min-height: 60px;\n\n        span {\n          align-self:center;\n          transition:.2s all ease;\n        }\n\n        .name {\n          font-weight: 700;\n        }\n\n        &:hover {\n          box-shadow: 0 1px 12px rgba(#000, .1);\n          z-index: 1000;\n          background:#fefefe;\n\n          .avatar img {\n            box-shadow: 0 1px 10px rgba(#000, .2);\n          }\n\n          .name {\n            color:$blue;\n          }\n        } // :hover\n      } // a\n\n      &:nth-child(odd) a {\n        background:darken($lightgray, 1%);\n\n        &:hover {\n          background:darken($lightgray, .75%);\n        }\n      }\n    } // .user\n  } // .results--list\n} // #results\n\n\n@media only screen and (max-width: 1000px) {\n  #results .results--list div.filter a {\n    font-size: .8em;\n  }\n\n  #results .results--list span {\n    font-size: .8em;\n  }\n}\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// single result page\n#result {\n  padding:30px gutter(8);\n\n  .avatar--lg {\n    @include span(3 first);\n    @include push(1);\n    padding:10px 0 0 0;\n\n    img {\n      max-width: 100%;\n      display: block;\n      border-radius: 100px;\n      box-shadow: -1px 3px 30px rgba(#000, .05);\n      border:2px solid $lightgray;\n    }\n  }\n\n  .text {\n    @include span(13);\n    padding-left:30px;\n\n    h1 {\n      font-weight: 300;\n      font-size: 3.2em;\n      color:$blue;\n      line-height: 1.4em;\n\n      em {\n        font-size: .5em;\n        font-style: normal;\n        color:rgba($text, .75);\n      }\n    }\n\n    h2 {\n      font-size: 1em;\n      font-weight: 400;\n      border-bottom:1px solid $gray;\n    }\n\n    .column {\n      @include span(1 of 2 nest);\n      margin-bottom:30px;\n\n      p {\n        margin:0 0 15px 0;\n      }\n\n      p.desc {\n        margin:0;\n        padding:0;\n        color:rgba($text, .5);\n        font-weight: 400;\n\n        em {\n          font-style: normal;\n          font-size: .8em;\n        }\n      }\n    }\n\n    a {\n      color:$blue;\n      text-decoration: none;\n      font-weight: 400;\n      position: relative;\n\n      &:after {\n        content:'';\n        position: absolute;\n        bottom:-6px;\n        left:0;\n        width: 100%;\n        height: 1px;\n        background:rgba($blue, .4);\n        opacity: 0;\n        transition:.2s all ease;\n      }\n\n      &:hover {\n        color:darken($blue, 3%);\n\n        &:after {\n          opacity: 1;\n          bottom:-3px;\n          height: 2px;\n        }\n      }\n    }\n  } // .text\n} // #result\n\n\n@media only screen and (max-width:1100px) {\n  #result .avatar--lg {\n    @include span(4);\n    @include push(1);\n  }\n\n  #result .text {\n    @include span(12);\n  }\n}\n\n\n@media only screen and (max-width:1100px) {\n  #result .text h1 {\n    font-size: 2.8em;\n  }\n\n  #result .text .column {\n    width: 100%;\n    display: block;\n    margin-bottom:20px;\n  }\n}\n","// Margin Syntax\n// =============\n\n// Pre\n// ---\n// Add spanning-margins before an element.\n// - $span  : <span>\n@mixin pre(\n  $span\n) {\n  $inspect: $span;\n  $span   : map-merge((spread: wide), parse-span($span));\n  $flow   : susy-get(flow, $span);\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\n  $gutter : gutter($span);\n  $span   : span($span);\n  $width  : if($split and $gutter, $span + $gutter, $span);\n\n  @include susy-inspect(pre, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Post\n// ----\n// Add spanning-margins after an element.\n// - $span  : <span>\n@mixin post(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, span($span) + gutter($span), span($span));\n\n  @include susy-inspect(post, $inspect);\n  @include margin-output(null, $width, $flow);\n}\n\n// Push\n// ----\n// Simple synonymn for pre.\n// - $span  : <span>\n@mixin push(\n  $span\n) {\n  @include pre($span);\n}\n\n// Pull\n// ----\n// Add negative spanning-margins before an element.\n// - $span  : <span>\n@mixin pull(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\n\n  @include susy-inspect(pull, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Squish\n// ------\n// Add spanning-margins before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin squish(\n  $pre,\n  $post: false\n) {\n  $inspect      : ($pre, $post);\n  $pre          : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(squish, $inspect);\n  @include pre($pre);\n  @include post($post);\n}\n"]}